## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?

Python is considered general purpose as it can be used for developing a variety of applications like desktop GUI applications, websites and web applications and is
not specialized for a particular problem. 
Python is a high-level programming language because itâ€™s highly readable by humans.

Q2. Why is Python called a dynamically typed language?

Because we don't have to declare variable type when defining them.

Q3. List some pros and cons of Python programming language?

Pros - Simple, Readable, Object-oriented, Free and open source, Portable, Extensible and many more.
Cons - Large Memory consumption, Speed limitation, Not suitable for mobile based applications, Design Restrictions etc.

Q4. In what all domains can we use Python?

Web Development, Machine Learning, Data Engineering, Scientific Calculations, etc.

Q5. What are variable and how can we declare them?

Variables in Python Variables are the names that store the values. We can declare them by assigning a value to them
Example a=5 or first_name = "User"

Q6. How can we take an input from the user in Python?

By using input() method. Example inp = input('Please enter you name')

Q7. What is the default datatype of the value that has been taken as an input using input() function?

Default data type is string

Q8. What is type casting?

Converting the data type of an object to another is called type casting

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Yes, we can take multiple inputs in input function. Example below:

a,b=input("Enter the 2 values = ").split()
print("1st value = ",a)
print("2nd value = ",b)

Q10. What are keywords?

Keywords are reserved words. These words hold some special meaning, can be commands, or a parameter etc. We cannot use keywords as variable names.

Q11. Can we use keywords as a variable? Support your answer with reason.

No we cannot use keywords as variables, Python compiler does not interpret them as variables.

Q12. What is indentation? What's the use of indentaion in Python?

Indentation in Python means space in the beginning of lines of the code. Python uses it to indicatee a block of code. For example it is used in if-else,
for loops and while loops.

Q13. How can we throw some output in Python?

We can use the print() function to throw output to the screen.

Q14. What are operators in Python?

Operators in Python are used to perform certain operations on variables and values. Few operators are below
 
Arithmetic operator 
Assignment operator
Comparison operator
Logical operator
Boolean operator

Q15. What is difference between / and // operators?

/ - Divisionn Operator Example 12/2 = 6
// - Floor Division Operator 13/2 = 6

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
s="iNeuron"
print(s*4)

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

num=input("Enter the number ")
num = int(num)
if num%2 == 0:
    print("The number is Even")
else:
    print("The number is Odd")
    
Q18. What are boolean operator?

Booleans represent one of two values: True or False.

Q19. What will the output of the following?
```
1 or 0 --> 1

0 and 0 --> 0

True and False and True --> False

1 or 0 or 0 --> 1
```

Q20. What are conditional statements in Python?

They regulate the flow of execution of code based on the defined conditions.

Q21. What is use of 'if', 'elif' and 'else' keywords?

Used for 

if condition:
  # code
elif condtion:
  # code
else:
  # code

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

age=input("Please enter your age")
age = int(age)
if age >= 18:
    print("I can vote")
else:
    print("I can't vote")

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
numbers = [12, 75, 150, 180, 145, 525, 50]
sum = 0
for i in numbers:
    if i%2 == 0:
        sum = sum + i
print("Sum of even numbers = ",sum)

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

a,b,c=input("Enter 3 number").split()
if a > b and a > c:
    print("The largest number is =",a)
elif b > a and b > c:
    print("The largest number is =",b)
else:
    print("The largest number is =",c)

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
numbers = [12, 75, 150, 180, 145, 525, 50]
for num in numbers:
    if num%5 == 0 and num <= 150:
        print("Number is = ", num)
    if num > 500:
        break

Q26. What is a string? How can we declare string in Python?

String is a data type. It is a list of characters in Unicode representation. Python deals with string as an array of characters.

Q27. How can we access the string using its index?

myString = "Hello from Python"
index = 0
character = myString[index]
print("Character at index 0 in the string is =",myString[index])

Output will be : H

Q28. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "iNeuron"

s = "Big Data iNeuron"
print(s.split()[2])

Q29. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "norueNi"

s = "Big Data iNeuron"
print(s.split()[2][-1::-1])

Q30. Resverse the string given in the above question.

s = "Big Data iNeuron"
print(s[-1::-1])

Q31. How can you delete entire string at once?

Using del keyword, example del string_variable

Q32. What is escape sequence?

Combination of character with a special meaning. Example we want to mention ' in a string. So we need to escape it with \'

Q33. How can you print the below string?

'iNeuron's Big Data Course'

s = 'iNeuron\'s Big Data Course'
print(s)

Q34. What is a list in Python?

The list is a  datatype available in Python which can be written as a list of comma-separated values (items) between square brackets


Q35. How can you create a list in Python?

list1 = [1,2,3,5,'apple']

Q36. How can we access the elements in a list?

By using their indexes.
list1 = [1,2,3,5,'apple']
print(list1[1])

Output: 2

Q37. Write a code to access the word "iNeuron" from the given list.

lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
print(lst[4][2])

Q38. Take a list as an input from the user and find the length of the list.

l1=input("Enter a list").split()
print(len(l1))

Q39. Add the word "Big" in the 3rd index of the given list.

lst = ["Welcome", "to", "Data", "course"]
lst.insert(2, "Big") 

Q40. What is a tuple? How is it different from list?

A tuple  is a data structure in Python that is an ordered list of elements. A tuple may include zero or more elements. It is immutable data type.

Q41. How can you create a tuple in Python?

We can create tuple as below
tup = ("apple, "banana", "mango")

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

t1 = ()
We cannot add ot remove elements in an existing tuple as it is immutable.

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

2 tuples can be appended only by creating a new tuple. Example below
tuple_a = ('a', 'b', 'c')
tuple_b = ('d', 'e', 'f')
tuple_c = tuple_a + tuple_b
print(tuple_c)
Output: ('a', 'b', 'c', 'd', 'e', 'f')

Q44. Take a tuple as an input and print the count of elements in it.

values = input("Enter values")
tup = tuple(str(item) for item in values.split())
print(tup)

Q45. What are sets in Python?

A Set is an unordered collection data type that is iterable, mutable and has no duplicate elements

Q46. How can you create a set?

By defining as below example
var = {"a", "b", "c"}
type(var)
Output : Set
Q47. Create a set and add "iNeuron" in your set.

s1 = set()
s1.add("iNeuron")

Q48. Try to add multiple values using add() function.

s1 = set()
s1.add("iNeuron")
s1.add("Big")
s1.add("Data")
s1.add("Course")

Q49. How is update() different from add()?

# add() adds new elements in a set
set6 = set()
set6.add(1)
set6.add(1)
set6.add(2)
set6.add(5)
set6.add(2)
set6.add(1)
set6.add(2)
print(set6) # output is {1, 2, 5}
# update() adds one set named tmp is added into another set set6 but duplicate elements are removed.
tmp = [1,2,5,2,1,3,4,5,6,2,3,5,6]
set6.update(tmp)
print(set6) # Output is {1, 2, 3, 4, 5, 6}

Q50. What is clear() in sets?

set() removes all elements from a set.

Q51. What is frozen set?

Python frozenset() Method creates an immutable Set object from an iterable. It is a built-in Python function.
As it is a set object therefore we cannot have duplicate values in the frozenset.

Q52. How is frozen set different from set?

set is mutable and can have duplicate values but frozen set is immutable and cannot have duplicate values. 

Q53. What is union() in sets? Explain via code.

set_a = {1,2,3,4,5,6}
set_b = {3,6,8,9,10}

# Union operation
print(set_a | set_b) # {1, 2, 3, 4, 5, 6, 8, 9, 10}

Q54. What is intersection() in sets? Explain via code.

set_a = {1,2,3,4,5,6}
set_b = {3,6,8,9,10}

# Intersection operation
print(set_a & set_b) # {3, 6}

Q55. What is dictionary ibn Python?

A dictionary in Python is a collection of key-value pairs. The dictionary keys must be unique. The dictionary value may be of any type.

Q56. How is dictionary different from all other data structures.

It is different as it has key value pairs. It cannot be iterated by index. Elements can be accessed using their keys only.

Q57. How can we delare a dictionary in Python?

dict3 ={'a':'1','b':'2','c':'3'}

Q58. What will the output of the following?

var = {}
print(type(var))

Output:
<class 'dict'>

Q59. How can we add an element in a dictionary?

Simply by defining key value pairs. Example
dict2={}
dict2['name'] = "John"
dict2['age'] = "24"

Q60. Create a dictionary and access all the values in that dictionary.

dict3 ={'a':'1','b':'2','c':'3'}
print(dict3[a])
print(dict3[b])
print(dict3[c])

Q61. Create a nested dictionary and access all the element in the inner dictionary.

dic = {'d1':{'a':'1','b':'2','c':'3'},
 'd2':{'m':23,'n':'32','o':'54'}}
print(dic['d2'])

Q62. What is the use of get() function?

Python Dictionary get() Method returns the value for a given key if present in the dictionary.

Q63. What is the use of items() function?

items() method displays a list of a given dictionaryâ€™s (key, value) pair.

Q64. What is the use of pop() function?

pop() is an inbuilt function in Python that removes and returns the last value from the List or the given index value.

Q65. What is the use of popitems() function?

popitem() method removes the last inserted key-value pair from the dictionary and returns it as a tuple.

Q66. What is the use of keys() function?

Prints out all the keys in a dictionary.

Q67. What is the use of values() function?

Prints out all the values in a dictionary.

Q68. What are loops in Python?

Loops are used to execute a piece of code multiple times or based on a condition.

Q69. How many type of loop are there in Python?

While Loops, For Loops

Q70. What is the difference between for and while loops?

While loop is used to execute a block of statements repeatedly until a given condition is satisfied. Here number of iterations is not known.
For loop is used for sequential traversal. The number of iterations is known.

Q71. What is the use of continue statement?

Continue is also a loop control statement just like the break statement. 
It forces to execute the next iteration of the loop.

Q72. What is the use of break statement?

The break statement is used to terminate the loop or statement in which it is present.
After that, the control passes to the statements that are present after the break statement, if available.

Q73. What is the use of pass statement?

The pass statement in Python is used when a statement is required but you do not want any command or code to execute.

Q74. What is the use of range() function?

range() function is used to get a range of numbers within a given range. Can be used within loops.

Q75. How can you loop over a dictionary?

We can loop over a dictionary as below using item() function
dict2 ={'a':'1','b':'2','c':'3'}
for k,v in dict2.items(): # item() built in function for dictionaries for iterating
    print(k,v)

Coding problems
Q76. Write a Python program to find the factorial of a given number.

num=int(input("Input a number"))
p=1
for i in range(1,num+1):
    p = p*i
print("Factorial is = ",p)

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100

prin=int(input("Input the Principal"))
rate=int(input("Input the Rate of Interest"))
time=int(input("Input the Time Period"))
si=(prin*rate*time)/100
print("Simple Interest is = ",si)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

prin=int(input("Input the Principal"))
rate=int(input("Input the Rate of Interest"))
time=int(input("Input the Time Period"))
amt=prin*((1 + rate/100))**time
print("Compund Interest is = ",amt)

Q79. Write a Python program to check if a number is prime or not.

num=int(input("Input a Number"))
sum = 0
for i in range(2,num):
   if num%i == 0:
    print("Number is not prime")
    break
   else:
    sum = sum + 1
if sum == num-2:
    print("Number is prime")

Q80. Write a Python program to check Armstrong Number.

num=input("Input a Number")
digits=len(num)
num_int = int(num)
sum = 0
for i in range(0,digits):
    sum = sum + (int(num[i]) ** digits)
if sum == num_int:
    print("Number ",num," is an Armstrong number")
else:
    print("Number ",num," is not an Armstrong number")

Q81. Write a Python program to find the n-th Fibonacci Number.

def fibbonaci(n):
    if n == 0:
        return "Incorrect choice"
    elif n == 1:
        return 0
    elif n == 2:
        return 1
    else:
        sum = 0
        f = 0
        s = 1
        for i in range(1,n-1):
            sum = f + s
            f = s
            s = sum
        return sum  

n = int(input("Enter the limit"))
print(fibbonaci(n))

Q82. Write a Python program to interchange the first and last element in a list.

list1 = input("Enter the values in the List").split()
l1_len = len(list1)
x = list1[0]
list1[0] = list1[l1_len -1]
list1[l1_len -1] = x
print("List is = ",list1)

Q83. Write a Python program to swap two elements in a list.

list1 = input("Enter the values in the List").split()
l1_len = len(list1)

a=int(input("First to be swapped"))
b=int(input("Second to be swapped"))

if a >= l1_len or b >=l1_len:
    print("Index out of bounds")
else:
    x = list1[a]
    list1[a-1] = list1[b-1]
    list1[b-1] = x
print("List is = ",list1)

Q84. Write a Python program to find N largest element from a list.

list1 = []
num = int(input("Number of elements in the list"))
for i in range(1,num+1):
    e = int(input("Enter the element ",))
    list1.append(e)
print("Largest element in the list is = ",max(list1))

Q85. Write a Python program to find cumulative sum of a list.

list1 = []
list2 = []
num = int(input("Number of elements in the list"))
for i in range(1,num+1):
    e = int(input("Enter the element ",))
    list1.append(e)
print(len(list1))
sum = 0
for j in range(0,len(list1)):
    sum = sum + list1[j]
    list2.append(sum)
print("Original List =",list1)    
print("List of Cumulative Sum =",list2)

Q86. Write a Python program to check if a string is palindrome or not.

s=input("Enter the string")
l=len(s)
sum = 0
for i in range(0,l//2):
    if s[i] == s[l - 1 - i]:
        sum = sum + 1
        continue
    else:
        print("String is not a Palindrome")
        break
if sum == l//2:
    print("String is Palindrome")

Q87. Write a Python program to remove i'th element from a string.

s=input("Enter the string")
l=len(s)
new_str = ""
i=int(input("Enter the ith element to be removed"))
for index in range(l):
    if index != i:
        new_str = new_str + s[index]
print(new_str) 

Q88. Write a Python program to check if a substring is present in a given string.

main_str = input("Enter the string")
sub_str = input("Enter the sub-string")
print(main_str.__contains__(sub_str))

Q89. Write a Python program to find words which are greater than given length k.



Q90. Write a Python program to extract unquire dictionary values.

Q91. Write a Python program to merge two dictionary.

Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.

Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
Q94. Write a Python program to get all combinations of 2 tuples.

Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
Q95. Write a Python program to sort a list of tuples by second item.

Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
Q96. Write a python program to print below pattern.

* 
* * 
* * * 
* * * * 
* * * * * 
Q97. Write a python program to print below pattern.

    *
   **
  ***
 ****
*****
Q98. Write a python program to print below pattern.

    * 
   * * 
  * * * 
 * * * * 
* * * * * 
Q99. Write a python program to print below pattern.

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
Q100. Write a python program to print below pattern.

A 
B B 
C C C 
D D D D 
E E E E E 
